---

# This playbook should provision/update our vault servers

- name: Vault
  hosts: all
  connection: local
  become_user: root
  become: yes
  become_method: sudo
#  strategy: debug  # just something to think about...
  vars:
    - cache_valid_time: 600
    - nginx_wildcard_certificates: []
    - use_manual_hosts: true
    - is_farm: false
    - failover_domain: "wpenginedev.com"
    - pod_base: "wpenginedev.com"
    - api1: "https://api.wpenginedev.com"
    - api: "api.wpenginedev.com"
    - api_domain: "api.wpenginedev.com"
    - api2_client: "https://api2.wpenginedev.com"
    - my:
        server:
          name: "{{ packer_build_name }}"
          type: vault
        cluster:
          id: 1
          datacenter: "{{ packer_builder_type }}"
        roles: { vault: 1 }
    - cluster:
          datacenter: "{{ packer_builder_type }}"

    - tmp_certs_path: "{{ playbook_dir }}/../../../../../artifacts"
    - vault_ssl_cert: "{{ lookup('file', '{{ tmp_certs_path }}/vault.crt.pem') }}"
    - vault_ssl_ca_cert: "{{ lookup('file', '{{ tmp_certs_path }}/vault.ca.crt.pem') }}"
    - vault_ssl_key: "{{ lookup('file', '{{ tmp_certs_path }}/vault.key.pem') }}"
#    - creds:
#        mailgun: {}
#        postfix: {}
#    - wpengine_domain: wpenginedev.com
    - register_with_zabbix: false


  pre_tasks:
#    - include: shared-load-vars.yml
#      check_mode: no
#      tags: always

      # for tasks ineligible for tags:always
#    - include: shared-pre-tasks.yml

  # CAUTION: Applying a when to a role also applies it to all the role's dependencies and handlers. A skipped role may
  # prevent the handlers or additional dependencies on that role from being executed later
  roles:
    - { role: ami-cleanup, tags: role_ami_cleanup }
    - { role: common-packages, tags: role_common_packages }
    - { role: td-agent, tags: role_td_agent }
    - { role: ufw-firewall, tags: role_ufw_firewall } #, when: packer_builder_type is defined and packer_builder_type != 'docker' }
    - { role: vault, tags: role_vault }
    - { role: security, tags: role_security }
    - { role: zabbix-agent, tags: role_zabbix_agent, when: register_with_zabbix }

#  post_tasks:
#    - include: shared-post-tasks.yml
