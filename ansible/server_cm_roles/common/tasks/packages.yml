---

- include: apt-get-update.yml
  when: ansible_os_family == "Debian"

- name: Uninstall some packages Debian family
  apt:
    pkg: "{{ item }}"
    state: absent
    purge: yes
  with_items:
    - apport
    - libpam-cracklib
    - libpam-systemd
    - lxc-common
    - lxcfs
    - lxd
    - lxd-client
    - ntpdate
    - popularity-contest
    - python-openssl
    - snapd
    - ssh-askpass-gnome
    - sshguard
    - eject
  when: ansible_os_family == "Debian"
  tags:
    - packages

- name: ensure ansible is latest version Debian family
  apt:
    pkg: ansible
    state: latest
    update_cache: yes
    cache_valid_time: "{{ cache_valid_time }}"
  when: ansible_os_family == "Debian"
  tags:
    - packages
    - skip_ansible_lint

- name: ensure common packages installed Debian family
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ cache_valid_time }}"
  with_items:
    - "{{ rsyslogd_packages }}"
    - acct
    - ack-grep
    - apache2-utils
    - arping
    - autoconf
    - automake
    - autotools-dev
    - bc
    - binutils
    - bison
    - bsd-mailx
    - build-essential
    - clamav
    - conntrack
    - cpp
    - cracklib-runtime
    - curl
    - flex
    - g++
    - gcc
    - gdisk
    - git-core
    - git-doc
    - gdb
    - dstat
    - iotop
    - gnu-standards
    - htop
    - iftop
    - jq
    - libarchive-zip-perl
    - libc6-dev
    - libpam-pwquality
    - libpcre3
    - libpcre3-dev
    - libpopt-dev
    - libpwquality-tools
    - libreadline6
    - libreadline6-dev
    - libsasl2-modules
    - libssh2-1
    - libtool
    - libxml2-dev
    - libxslt1-dev
    - libyaml-dev
    - logrotate
    - lsof
    - lynx
    - m4
    - make
    - moreutils
    - mutt
    - mydumper
    - nfswatch
    - ngrep
    - nload
    - ntp
    - openssl
    - perl
    - perl-modules
    - psmisc
    - python-jinja2
    - python-mysqldb
    - python-paramiko
    - python-pip
    - python-software-properties
    - python-yaml
    - python3-pip
    - python3-setuptools
#    - python3-dev # for scandir?
    - rdate
    - rsync
    - s3cmd
    - screen
    - ssed
    - strace
    - subversion
    - sysstat
    - tcpdump
    - tmux
    - unzip
    - update-notifier-common
    - vim-nox
    - whois
    - zip
    - zlib1g
    - zlib1g-dev
  when: ansible_os_family == "Debian"
  tags:
    - packages

#- name: Install wprecap
#  apt:
#    name: "wpengine-recap"
#    force: yes
#    update_cache: yes
#    cache_valid_time: "{{ cache_valid_time }}"
#    state: "present"
#  register: apt_task
#  until: apt_task.failed is not defined
#  retries: 3
#  delay: 30
#  tags:
#    - packages
#    - wpengine_packages
#    - package_recap

- name: Install host or group specific packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{ cache_valid_time }}"
  with_items: "{{ group_packages }}"
  when: ansible_os_family == "Debian"

- name: Install host or group specific gem packages
  gem:
    name: "{{ item }}"
    state: present
    user_install: no
  with_items: "{{ group_gem_packages }}"

# Lots of gross complexity here in order to get pip2 and pip3 upgraded to a more recent version
# We want to upgrade so that new features like having an /etc/pip.conf are available
# >8 has problems with Python 3.2. See: TOPS-2876.
#
# 14.04
# Initial run has:
#   /usr/bin/pip IS pip2
#   /usr/bin/pip2
#   /usr/bin/pip3
#
# Upgrade leaves:
#   /usr/bin/pip IS pip2
#   /usr/bin/pip2
#   /usr/bin/pip3
#   /usr/local/bin/pip
#   /usr/local/bin/pip2
#   /usr/local/bin/pip2.7
#   /usr/local/bin/pip3
#   /usr/local/bin/pip3.4
#
# 16.04 has fully functional pip2 and pip3 out of the box,
# but it ships with 8.1.1 which has a metadata parsing bug
#
# On 14.04+, we ensure /usr/local/bin/pip -> /usr/local/bin/pip2
# and remove /usr/bin/pip*


- name: Ensure latest pip3 version
  pip:
    name: pip{{ pip_version_constraint|default() }}
    state: latest
    executable: pip3
  environment:
    ENSUREPIP_OPTIONS: install
    # pip3 ensurepip will mangle 'pip2' when it tries to manipulate a symlinked 'pip'
    # https://docs.python.org/3/library/ensurepip.html
  register: pip_upgrade
  changed_when: '"Requirement already up-to-date" not in pip_upgrade.stdout'
  when: ansible_distribution == "Ubuntu"
  tags:
    - packages
    - skip_ansible_lint

# if /usr/bin/pip exists, box hasn't been upgraded to a newer pip2
- name: Check whether /usr/bin/pip is still pip2
  stat:
    path: /usr/bin/pip
  register: pip
  tags:
    - packages

- name: Ensure latest pip2 version
  pip:
    name: pip{{ pip_version_constraint|default() }}
    state: latest
    executable: '{{ pip.stat.path | default("pip2") }}'
  register: pip_upgrade
  changed_when: '"Requirement already up-to-date" not in pip_upgrade.stdout'
  when: ansible_distribution == "Ubuntu"
  tags:
    - packages
    - skip_ansible_lint

# At this point /usr/local/bin/pip[23] should both exist
# pip3 will overwrite pip2 if pip is a symlink, copy instead.
- name: Ensure /usr/local/bin/pip is a copy of pip2
  copy:
    src: /usr/local/bin/pip2
    dest: /usr/local/bin/pip
    follow: no
    owner: root
    group: root
    mode: 0755
  when: ansible_distribution == "Ubuntu"
  tags:
    - packages

- name: register /usr/bin/pip files
  command: ls /usr/bin/pip*
  register: system_pips
  changed_when: false
  failed_when: false
  tags:
    - packages

- name: Remove /usr/bin/pip* to avoid pathing conflict
  # In 14.04, after upgrading pip2, the /usr/bin/pip bin is not removed
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ system_pips.stdout_lines | default([]) }}"
  when: ansible_distribution == "Ubuntu" and
        system_pips.stdout_lines is defined
  tags:
    - packages
    - skip_ansible_lint

- name: Install PyPI2 modules
  pip:
    name: "{{ item.module | default(item) }}"
    executable: pip2
    state: "{{ item.state | default('present') }}"
  when: "{{ item.when | default(true) }}"
  with_items:
    - boto
    - boto3
    - prettytable
    - psutil
    - pytest>=3.0.7
    - requests>=2.13.0
    - scandir
    - subprocess32
    - testinfra>=1.6.0
    - { module: s4cmd, state: latest }
  tags:
    - packages
    - pip
    - pip2

- name: Correct s4cmd permissions
  file:
    path: /usr/local/bin/s4cmd
    mode: 0755

- name: Install PyPI3 modules
  pip:
    name: "{{ item.module|default(item) }}"
    executable: pip3
    state: "{{ item.state | default('present') }}"
  with_items:
    - requests>=2.13.0
    - scandir
  tags:
    - packages
    - pip
    - pip3

- name: Install host or group specific pip packages
  pip:
    name: "{{ item.name | default(item) }}"
    extra_args: "{% if item.extraindex is defined %} --extra-index-url {{ item.extraindex}} {% endif %}"
    state: present
  with_items:
    - "{{ group_pip_packages }}"
    - "{{ host_pip_packages }}"
  no_log: True
  tags:
    - packages

- name: Install host or group specific PyPI3 packages
  pip:
    name: "{{ item.name | default(item) }}"
    executable: "pip3"
    extra_args: "{% if item.extraindex is defined %} --extra-index-url {{ item.extraindex}} {% endif %}"
  with_items:
    - "{{ group_pip3_packages }}"
    - "{{ host_pip3_packages }}"
  no_log: True
  tags:
    - packages

- name: Check if apparmor exists
  stat: path=/etc/apparmor.d/disable
  when: ansible_os_family == "Debian"
  register: apparmor_d
  tags:
    - role_mysql # dependency of roles/mysql/tasks/main.yml: Turn off some apparmor enforcements

- name: Turn off some apparmor enforcements
  file: src=/etc/apparmor.d/{{ item }} dest=/etc/apparmor.d/disable/{{ item }} state=link force=yes
  when: apparmor_d.stat.isdir is defined and apparmor_d.stat.isdir == true
  notify:
    - apparmor reload
  with_items:
    - usr.sbin.ntpd
